name: Deploy Flow

on:
  push:
    branches:
      - main

jobs:
  step1_build_and_push_latest:
    name: Step 1 - Build and Push :latest
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image with Git SHA as APP_VERSION
      run: |
        docker build \
          -f flask-app/Dockerfile \
          --build-arg APP_VERSION=${{ github.sha }} \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest \
          flask-app

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest

  step2_deploy_web_test:
      name: Step 2 - Deploy web-test and Run Health Check
      runs-on: self-hosted
      needs: step1_build_and_push_latest

      steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Prepare bastion-key.pem
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/bastion-key.pem
          chmod 600 ~/.ssh/bastion-key.pem
          HOST="${{ secrets.BASTION_IP }}"

      - name: Copy deploy-web-test.sh to Bastion via scp
        run: |
          HOST="${{ secrets.BASTION_IP }}"
          USER="${{ secrets.BASTION_USER }}"
          scp -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no scripts/deploy-web-test.sh \
          ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP}}:/home/${{ secrets.BASTION_USER }}/

      - name: Create web-key.pem on Bastion
        run: |
          ssh -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no \
          ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }} \
          "mkdir -p ~/.ssh && echo '${{ secrets.WEB_KEY }}' > ~/.ssh/web-key.pem && chmod 600 ~/.ssh/web-key.pem"

      - name: Ensure AWS CLI and curl are installed on Bastion
        run: |
          ssh -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no \
          ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }} \
          "command -v aws >/dev/null || (echo Installing AWS CLI... && \
          curl -sS https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip && \
          sudo apt update && sudo apt install unzip -y && \
          unzip awscliv2.zip && sudo ./aws/install)"

          ssh -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no \
          ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }} \
          "command -v curl >/dev/null || (echo Installing curl... && \
          sudo apt update && sudo apt install curl -y)"

      - name: Execute deploy-web-test.sh on Bastion
        run: |
          ssh -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no \
          ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }} \
          "echo 'ðŸš€ Running health check script' && chmod +x ~/deploy-web-test.sh && ~/deploy-web-test.sh"

      - name: Cleanup SSH key
        run: rm -f ~/.ssh/bastion-key.pem

  step3_tag_and_push_stable:
      name: Step 3 - Tag and Push :stable
      runs-on: ubuntu-latest
      needs: step2_deploy_web_test

      steps:
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Pull :latest image from Docker Hub
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest

      - name: Tag image as :stable
        run: docker tag ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:latest ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:stable

      - name: Push :stable image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_TAG }}:stable

  step4_rotate_web_asg:
        name: Step 4 - Rolling Update ASG
        runs-on: self-hosted
        needs: step3_tag_and_push_stable

        steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Prepare bastion-key.pem
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.BASTION_SSH_KEY }}" > ~/.ssh/bastion-key.pem
            chmod 600 ~/.ssh/bastion-key.pem

        - name: Copy rotate-web-instances.sh to Bastion via scp
          run: |
            scp -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no scripts/rotate-web-instances.sh \
            ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }}:/home/${{ secrets.BASTION_USER }}/

        - name: Execute rotate-web-instances.sh on Bastion
          run: |
            ssh -i ~/.ssh/bastion-key.pem -o StrictHostKeyChecking=no \
            ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_IP }} \
            "chmod +x ~/rotate-web-instances.sh && ~/rotate-web-instances.sh"

        - name: Cleanup SSH key
          run: rm -f ~/.ssh/bastion-key.pem  